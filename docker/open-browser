#!/usr/bin/env bash

set -e
# set -x

machine_name='default'
port=80

# Get last directory of pwd
base=$(basename `pwd`)
base=${base/-/}

show_help () {
    echo 'Usage: docker/open-browser [OPTIONS] '
    echo
    echo 'Options:'
    echo '  -m            Docker machine name to be started. (default: default)'
}

parse_options() {
    set -- "$@"
    while [ "$#" -gt 0 ]; do
      case "$1" in
        -h)
            show_help
            exit 0
        ;;
        -m) machine_name="$2"
            shift 2
        ;;
        ?*) echo 'ERROR: Unknown option.'
            show_help
            exit 0
        ;;
      esac
    done
}

check_machine() {
    if ! docker-machine status $1 &> /dev/null ; then
        echo "ERROR: somethind wrong happened when we tried to reach your"
        echo "docker-machine. Verify the machine name and try it again."
        exit 0
    fi

    local status=$(docker-machine status "$1")
    if [ $status = 'Stopped' ]; then
        echo "Your docker-machine $1 is stopped. Try docker/start first."
        exit 0
    fi
}

set_environment() {
    echo 'Setting your environment ...'
    eval $(docker-machine env "$1")
}

define_settings() {
    echo 'Defining basic settings ...'

    # Gets container id
    local container_id=$(docker ps -a | awk '{ print $1,$2 }' | grep "$base"_nginx | awk '{ print $1 }')

    running=$(docker inspect --format='{{.State.Running}}' "$container_id")
    if [ $running == 'false' ]; then
        echo 'Your server is not running. Please use docker/start to initialize it.'
        exit 0
    fi

    # Gets machine ip
    echo 'Getting your machine ip ...'
    machine_ip=$(docker-machine ip)

    # Gets port
    echo 'Getting your server port ...'
    port=$(docker inspect --format='{{(index (index .NetworkSettings.Ports "80/tcp") 0).HostPort}}' "$container_id")
}

open_browser() {
    echo 'Opening your browser ...'
    open http://"$machine_ip":"$port"

    # Still need to check support of open in other distros
    # Check: xdg-open
}

parse_options "$@"
check_machine "$machine_name"
set_environment "$machine_name"
define_settings
open_browser
