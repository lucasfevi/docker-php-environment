#!/usr/bin/env bash

set -e
#set -x

port=80
path='./'
rebuild=false
composer=false

show_help () {
    echo 'Usage: docker/start [OPTIONS] '
    echo
    echo 'Options:'
    echo '  -P            Port to be used on your server. (default: 80)'
    echo '  -p            Path to be used as root on your server. (default: ./)'
    echo '  -f            Force rebuild on the images.'
    echo '  -c            Run composer install.'
}

parse_options() {
    set -- "$@"
    while [ "$#" -gt 0 ]; do
      case "$1" in
        -h)
            show_help
            exit 0
        ;;
        -P) port="$2"
            shift 2
        ;;
        -p) path="$2"
            shift 2
        ;;
        -f) rebuild=true;
            shift 1
        ;;
        -c) composer=true;
            shift 1
        ;;
        ?*) echo 'ERROR: Unknown option.'
            show_help
            exit 0
        ;;
      esac
    done
}

generate_compose_file() {
    echo 'Generating your docker-compose.yml file ...'

    # TODO: only replace first occurrence
    formatted_path=${path/\//\\\/}

    sed -e s/PORT/"$port"/ -e s/PATH/"$formatted_path"/ docker/template.yml > docker-compose.yml
}

build_server() {
    echo 'Building your containers ...'
    docker-compose up -d

    if [ "$rebuild" = true ]; then
        echo 'Rebuilding your images ...'
        docker-compose build --pull
    fi

    # TODO: check if that's true
    echo 'Your docker environment is up and running!'
}

composer_install() {
    if [ "$composer" = true ]; then
        echo 'Running composer install ...'
        docker run -i -t --rm -v $PWD:/srv lucasfevi/composer install
    fi
}

parse_options "$@"
generate_compose_file
build_server
composer_install